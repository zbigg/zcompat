# =========================================================================
#     This makefile was generated by
#     Bakefile 0.1.4 (http://bakefile.sourceforge.net)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C compiler 
CC = cl

# Standard flags for CC 
CFLAGS = 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Standard linker flags 
LDFLAGS = 

#  [debug,release]
BUILD = release



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

ZCOMPAT_CFLAGS = /MD$(__DEBUG_FLAG_0) /DWIN32 $(__OPTIMIZE_FLAG) \
	$(__DEBUG_FLAG) $(____DEBUG_FLAG) /Fdzcompat.pdb /Ibuild\msvc \
	$(__WARNING_FLAG) /I.\include /DZCOMPAT_MAKINGDLL $(CPPFLAGS) $(CFLAGS)
ZCOMPAT_OBJECTS =  \
	zcompat_ansi.obj \
	zcompat_binio.obj \
	zcompat_bsdsock.obj \
	zcompat_chain.obj \
	zcompat_chconv.obj \
	zcompat_dir.obj \
	zcompat_dstream.obj \
	zcompat_error.obj \
	zcompat_filter.obj \
	zcompat_getcon.obj \
	zcompat_mdmfdbg.obj \
	zcompat_membuf.obj \
	zcompat_mfifo.obj \
	zcompat_netio.obj \
	zcompat_open.obj \
	zcompat_pipe.obj \
	zcompat_posix.obj \
	zcompat_sbtree.obj \
	zcompat_sbuffer.obj \
	zcompat_scipher.obj \
	zcompat_slist.obj \
	zcompat_smap.obj \
	zcompat_smtp.obj \
	zcompat_sstack.obj \
	zcompat_sstr.obj \
	zcompat_stdio.obj \
	zcompat_str.obj \
	zcompat_textio.obj \
	zcompat_upipe.obj \
	zcompat_utils.obj \
	zcompat_vform.obj \
	zcompat_werror.obj \
	zcompat_wgetcon.obj \
	zcompat_win32f.obj \
	zcompat_wpipe.obj \
	zcompat_wstdio.obj \
	zcompat_wutil.obj \
	zcompat_zcompat.obj \
	zcompat_zmm.obj \
	zcompat_zmmchunk.obj \
	zcompat_zmminc.obj \
	zcompat_zmod.obj \
	zcompat_zopen.obj \
	zcompat_zopt.obj \
	zcompat_zpio.obj \
	zcompat_zpio_m.obj \
	zcompat_zprintf.obj \
	zcompat_zscanf.obj \
	zcompat_zthread.obj \
	zcompat_ztools_i.obj
ZCOMPATS_CFLAGS = /MD$(__DEBUG_FLAG_0) /DWIN32 $(__OPTIMIZE_FLAG) \
	$(__DEBUG_FLAG) $(____DEBUG_FLAG) /Fdzcompats.pdb /Ibuild\msvc \
	$(__WARNING_FLAG) /I.\include $(CPPFLAGS) $(CFLAGS)
ZCOMPATS_OBJECTS =  \
	zcompats_ansi.obj \
	zcompats_binio.obj \
	zcompats_bsdsock.obj \
	zcompats_chain.obj \
	zcompats_chconv.obj \
	zcompats_dir.obj \
	zcompats_dstream.obj \
	zcompats_error.obj \
	zcompats_filter.obj \
	zcompats_getcon.obj \
	zcompats_mdmfdbg.obj \
	zcompats_membuf.obj \
	zcompats_mfifo.obj \
	zcompats_netio.obj \
	zcompats_open.obj \
	zcompats_pipe.obj \
	zcompats_posix.obj \
	zcompats_sbtree.obj \
	zcompats_sbuffer.obj \
	zcompats_scipher.obj \
	zcompats_slist.obj \
	zcompats_smap.obj \
	zcompats_smtp.obj \
	zcompats_sstack.obj \
	zcompats_sstr.obj \
	zcompats_stdio.obj \
	zcompats_str.obj \
	zcompats_textio.obj \
	zcompats_upipe.obj \
	zcompats_utils.obj \
	zcompats_vform.obj \
	zcompats_werror.obj \
	zcompats_wgetcon.obj \
	zcompats_win32f.obj \
	zcompats_wpipe.obj \
	zcompats_wstdio.obj \
	zcompats_wutil.obj \
	zcompats_zcompat.obj \
	zcompats_zmm.obj \
	zcompats_zmmchunk.obj \
	zcompats_zmminc.obj \
	zcompats_zmod.obj \
	zcompats_zopen.obj \
	zcompats_zopt.obj \
	zcompats_zpio.obj \
	zcompats_zpio_m.obj \
	zcompats_zprintf.obj \
	zcompats_zscanf.obj \
	zcompats_zthread.obj \
	zcompats_ztools_i.obj

### Conditionally set variables: ###

!if "$(BUILD)" == "debug"
__DEBUG_FLAG_5 = /DEBUG
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_5 = 
!endif
!if "$(BUILD)" == "debug"
__OPTIMIZE_FLAG = /Od
!endif
!if "$(BUILD)" == "release"
__OPTIMIZE_FLAG = /O2
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG = /Zi
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG = 
!endif
!if "$(BUILD)" == "debug"
____DEBUG_FLAG = /D_DEBUG
!endif
!if "$(BUILD)" == "release"
____DEBUG_FLAG = 
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG_0 = d
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_0 = 
!endif
!if "$(BUILD)" == "debug"
__WARNING_FLAG = /W4
!endif
!if "$(BUILD)" == "release"
__WARNING_FLAG = 
!endif


### Targets: ###

all: zcompat.dll zcompats.lib

clean: 
	-if exist .\*.obj del .\*.obj
	-if exist .\*.res del .\*.res
	-if exist zcompat.dll del zcompat.dll
	-if exist zcompat.ilk del zcompat.ilk
	-if exist zcompat.pdb del zcompat.pdb
	-if exist zcompat.lib del zcompat.lib
	-if exist zcompats.lib del zcompats.lib

zcompat.dll: $(ZCOMPAT_OBJECTS)
	link /DLL /NOLOGO /OUT:$@ $(LDFLAGS) $(__DEBUG_FLAG_5) @<<
	$(ZCOMPAT_OBJECTS)  /IMPLIB:zcompat.lib
<<

zcompats.lib: $(ZCOMPATS_OBJECTS)
	if exist $@ del $@
	lib /NOLOGO /OUT:$@ @<<
	$(ZCOMPATS_OBJECTS)
<<

zcompat_ansi.obj: .\src\ansi.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_binio.obj: .\src\binio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_bsdsock.obj: .\src\bsdsock.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_chain.obj: .\src\chain.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_chconv.obj: .\src\chconv.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_dir.obj: .\src\dir.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_dstream.obj: .\src\dstream.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_error.obj: .\src\error.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_filter.obj: .\src\filter.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_getcon.obj: .\src\getcon.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_mdmfdbg.obj: .\src\mdmfdbg.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_membuf.obj: .\src\membuf.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_mfifo.obj: .\src\mfifo.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_netio.obj: .\src\netio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_open.obj: .\src\open.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_pipe.obj: .\src\pipe.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_posix.obj: .\src\posix.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_sbtree.obj: .\src\sbtree.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_sbuffer.obj: .\src\sbuffer.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_scipher.obj: .\src\scipher.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_slist.obj: .\src\slist.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_smap.obj: .\src\smap.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_smtp.obj: .\src\smtp.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_sstack.obj: .\src\sstack.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_sstr.obj: .\src\sstr.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_stdio.obj: .\src\stdio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_str.obj: .\src\str.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_textio.obj: .\src\textio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_upipe.obj: .\src\upipe.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_utils.obj: .\src\utils.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_vform.obj: .\src\vform.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_werror.obj: .\src\werror.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_wgetcon.obj: .\src\wgetcon.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_win32f.obj: .\src\win32f.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_wpipe.obj: .\src\wpipe.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_wstdio.obj: .\src\wstdio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_wutil.obj: .\src\wutil.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zcompat.obj: .\src\zcompat.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zmm.obj: .\src\zmm.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zmmchunk.obj: .\src\zmmchunk.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zmminc.obj: .\src\zmminc.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zmod.obj: .\src\zmod.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zopen.obj: .\src\zopen.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zopt.obj: .\src\zopt.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zpio.obj: .\src\zpio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zpio_m.obj: .\src\zpio_m.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zprintf.obj: .\src\zprintf.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zscanf.obj: .\src\zscanf.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_zthread.obj: .\src\zthread.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompat_ztools_i.obj: .\src\ztools_i.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPAT_CFLAGS) $**

zcompats_ansi.obj: .\src\ansi.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_binio.obj: .\src\binio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_bsdsock.obj: .\src\bsdsock.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_chain.obj: .\src\chain.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_chconv.obj: .\src\chconv.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_dir.obj: .\src\dir.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_dstream.obj: .\src\dstream.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_error.obj: .\src\error.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_filter.obj: .\src\filter.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_getcon.obj: .\src\getcon.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_mdmfdbg.obj: .\src\mdmfdbg.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_membuf.obj: .\src\membuf.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_mfifo.obj: .\src\mfifo.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_netio.obj: .\src\netio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_open.obj: .\src\open.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_pipe.obj: .\src\pipe.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_posix.obj: .\src\posix.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_sbtree.obj: .\src\sbtree.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_sbuffer.obj: .\src\sbuffer.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_scipher.obj: .\src\scipher.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_slist.obj: .\src\slist.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_smap.obj: .\src\smap.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_smtp.obj: .\src\smtp.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_sstack.obj: .\src\sstack.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_sstr.obj: .\src\sstr.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_stdio.obj: .\src\stdio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_str.obj: .\src\str.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_textio.obj: .\src\textio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_upipe.obj: .\src\upipe.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_utils.obj: .\src\utils.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_vform.obj: .\src\vform.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_werror.obj: .\src\werror.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_wgetcon.obj: .\src\wgetcon.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_win32f.obj: .\src\win32f.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_wpipe.obj: .\src\wpipe.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_wstdio.obj: .\src\wstdio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_wutil.obj: .\src\wutil.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zcompat.obj: .\src\zcompat.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zmm.obj: .\src\zmm.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zmmchunk.obj: .\src\zmmchunk.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zmminc.obj: .\src\zmminc.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zmod.obj: .\src\zmod.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zopen.obj: .\src\zopen.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zopt.obj: .\src\zopt.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zpio.obj: .\src\zpio.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zpio_m.obj: .\src\zpio_m.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zprintf.obj: .\src\zprintf.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zscanf.obj: .\src\zscanf.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_zthread.obj: .\src\zthread.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**

zcompats_ztools_i.obj: .\src\ztools_i.c
	$(CC) /c /nologo /TC /Fo$@ $(ZCOMPATS_CFLAGS) $**
